version: 2.1

orbs:
  sonarscanner: psl/sonarscanner@0.0.4

jobs:
  build_test:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Install npm dependencies
          command: |
            npm install --save

  build_docker_image:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build Docker image
          command: |
            docker build -t demo_nodejs_circleci -t kawtar2004/demo_nodejs_circleci:latest .
            echo $DOCKER_PASSWORD | docker login -u kawtar2004 --password-stdin
            docker push kawtar2004/demo_nodejs_circleci:latest

  scan:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Télécharger et installer SonarQube scanner
          command: |
            export SONAR_SCANNER_VERSION=4.7.0.2747
            export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
            curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
            unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
            export PATH=$SONAR_SCANNER_HOME/bin:$PATH
            export SONAR_SCANNER_OPTS="-server"

      - run:
          name: Exécuter SonarScanner
          command: |
           sonar-scanner -h \
             -Dsonar.projectKey=demo_nodejs_circleci \
             -Dsonar.sources=. \
             -Dsonar.host.url=http://localhost:9000

workflows:
  version: 2
  build_test:
    jobs:
      - build_test
      - build_docker_image
      - scan

      - notify:
          name: Notify on failure
          type: slack
          channel: '#notifications'
          message: 'Build failed'
          fail_only: true
